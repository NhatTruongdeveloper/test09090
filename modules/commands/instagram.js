module.exports.config = {
    name: 'instagram',
    version: '1.1.2',
    hasPermssion: 0,
    credits: '',
    description: 'Ti·ªán √≠ch v·ªÅ Instagram',
    commandCategory: 'ADMIN',
    usages: '<info|image|video|post|music> [link ho·∫∑c username]',
    cooldowns: 2,
    dependencies: {
        'image-downloader': '',
        'axios': '',
        'fs-extra': '',
        'request': ''
    }
};

const axios = require("axios");
const fs = require("fs-extra");
const request = require("request");
const downloader = require('image-downloader');

module.exports.run = async function({ api, event, args }) {
  try {
    const { threadID, messageID, senderID, body } = event;
    const cmd = (args[0] || '').toLowerCase();

    switch (cmd) {
      case "info":
      case "i": {
        const username = args[1];
        if (!username) return api.sendMessage("Vui l√≤ng nh·∫≠p username Instagram.", threadID, messageID);

        const res = await axios.get(`https://nguyenlienmanh.com/instagram/info?username=${encodeURIComponent(username)}`);
        if (!res.data || !res.data.data) return api.sendMessage("Kh√¥ng t√¨m th·∫•y th√¥ng tin ho·∫∑c API l·ªói!", threadID, messageID);

        const picUrl = res.data.data.picture;
        const filePath = __dirname + "/cache/ins.png";
        const callback = () => api.sendMessage({
          body: `üì∏ Name: ${res.data.data.fullname}\nüë§ Username: ${res.data.data.username}\nüîí Trang ri√™ng t∆∞: ${res.data.data.private}\nüÜî ID: ${res.data.data.id}\nüë• Followers: ${res.data.data.followers}\nüë£ ƒêang theo d√µi: ${res.data.data.following}\nüì∑ B√†i ƒëƒÉng: ${res.data.data.post_cout}\nüåê Web: ${res.data.data.website}\nüìù Bio: ${res.data.data.bio}`,
          attachment: fs.createReadStream(filePath)
        }, threadID, () => fs.unlinkSync(filePath), messageID);

        request(encodeURI(`${picUrl}`)).pipe(fs.createWriteStream(filePath)).on('close', callback);
        break;
      }

      case "post":
      case "p": {
        const link = args[1];
        if (!link) return api.sendMessage("Vui l√≤ng nh·∫≠p link b√†i post.", threadID, messageID);

        const res = await axios.get(`https://nguyenlienmanh.com/instagram/videodl?url=${encodeURIComponent(link)}`);
        if (!res.data || !res.data.images) return api.sendMessage("Kh√¥ng t√¨m th·∫•y ·∫£nh ho·∫∑c API l·ªói!", threadID, messageID);
        const url = res.data.images[0].image_versions2.candidates[0].url;
        const filePath = __dirname + "/cache/insta.png";
        const callback = () => api.sendMessage({
          body: `T√™n: ${res.data.user_full_name} ( ${res.data.username} )\nTi√™u ƒë·ªÅ: ${res.data.title}\nCMT: ${res.data.comment_count}\nLIKE: ${res.data.like_count}\nAuthor: ${res.data.author}`,
          attachment: fs.createReadStream(filePath)
        }, threadID, () => fs.unlinkSync(filePath), messageID);

        request(encodeURI(`${url}`)).pipe(fs.createWriteStream(filePath)).on('close', callback);
        break;
      }

      case "video":
      case "v": {
        const link_video = args[1];
        if (!link_video) return api.sendMessage("Vui l√≤ng nh·∫≠p link video Instagram.", threadID, messageID);

        const data = (await axios.get(`https://nguyenlienmanh.com/instagram/videodl?url=${encodeURIComponent(link_video)}`)).data;
        if (!data.video_versions) return api.sendMessage("Kh√¥ng l·∫•y ƒë∆∞·ª£c video!", threadID, messageID);
        const buffer = (await axios.get(data.video_versions[0].url, { responseType: 'arraybuffer' })).data;
        const path = __dirname + '/cache/insta.mp4';

        fs.writeFileSync(path, buffer);
        api.sendMessage({
          body: `üé¨ Video Instagram c·ªßa b·∫°n ƒë√¢y:`,
          attachment: fs.createReadStream(path)
        }, threadID, () => fs.unlinkSync(path), messageID);
        break;
      }

      case "music":
      case "a":
      case "m": {
        const link_video = args[1];
        if (!link_video) return api.sendMessage("Vui l√≤ng nh·∫≠p link video Instagram.", threadID, messageID);

        const data = (await axios.get(`https://nguyenlienmanh.com/instagram/videodl?url=${encodeURIComponent(link_video)}`)).data;
        if (!data.music_metadata || !data.music_metadata.original_sound_info || !data.music_metadata.original_sound_info.progressive_download_url)
          return api.sendMessage("Kh√¥ng l·∫•y ƒë∆∞·ª£c link audio!", threadID, messageID);

        const buffer = (await axios.get(data.music_metadata.original_sound_info.progressive_download_url, { responseType: 'arraybuffer' })).data;
        const path = __dirname + '/cache/insta.mp3';

        fs.writeFileSync(path, buffer);
        api.sendMessage({
          body: `üéµ Audio Instagram`,
          attachment: fs.createReadStream(path)
        }, threadID, () => fs.unlinkSync(path), messageID);
        break;
      }

      case "basil": {
        const link_post = args[1];
        if (!link_post || !link_post.startsWith('https://www.instagram.com/p/'))
          return api.sendMessage('Link b√†i ƒëƒÉng kh√¥ng h·ª£p l·ªá', threadID, messageID);

        axios.get(`https://nguyenlienmanh.com/instagram/videodl?url=${encodeURIComponent(link_post)}`)
          .then(async success => {
            const info = success.data;
            const body = `T√™n: ${info.user_full_name} ( ${info.username} )\nTi√™u ƒê·ªÅ: ${info.title}\nCMT: ${info.comment_count} b√¨nh lu·∫≠n\nLIKE: ${info.like_count} l∆∞·ª£t\nT·ªïng ·∫£nh c·ªßa b√†i vi·∫øt: ${info.carousel_media_count} ·∫£nh`;
            const allImage = info.images.map(el => el.image_versions2.candidates[0].url);
            let attachment = [];
            for (let i = 0; i < allImage.length; i++) {
              const url = allImage[i];
              const path = `${__dirname}/${i}.jpg`;
              const buffer = (await axios.get(url, { responseType: 'arraybuffer' })).data;
              fs.writeFileSync(path, buffer);
              attachment.push(fs.createReadStream(path));
            }
            api.sendMessage({ body, attachment }, threadID, () => {
              for (let i = 0; i < allImage.length; i++) {
                const path = `${__dirname}/${i}.jpg`;
                if (fs.existsSync(path)) fs.unlinkSync(path);
              }
            });
          })
          .catch(error => {
            console.log(error);
            api.sendMessage("Kh√¥ng l·∫•y ƒë∆∞·ª£c th√¥ng tin ·∫£nh!", threadID, messageID);
          });
        break;
      }

      default:
        api.sendMessage(
`==== INSTAGRAM TOOL ====
‚Ä¢ info/i [username]: L·∫•y info user.
‚Ä¢ post/p [link]: ·∫¢nh b√†i post.
‚Ä¢ video/v [link]: T·∫£i video.
‚Ä¢ music/a/m [link]: Nh·∫°c t·ª´ video.
‚Ä¢ basil [link IG post]: To√†n b·ªô ·∫£nh b√†i post.
VD: instagram info username
VD: instagram video https://...
`, threadID, messageID);
    }
  } catch (e) {
    api.sendMessage(`ƒê√£ x·∫£y ra l·ªói: ${e.message || e}`, event.threadID, event.messageID);
  }
};